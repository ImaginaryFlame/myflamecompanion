import { NextRequest, NextResponse } from 'next/server';
import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

// Donn√©es de l'univers "H√©ros et la F√©e" bas√©es sur l'analyse du portfolio
const UNIVERS_DATA = {
  titre: 'La Fable du H√©ros et la F√©e',
  description: 'Dans un monde d√©chir√© par la fusion ancienne entre l\'univers humain et le royaume f√©√©rique, les cendres de la guerre, du rejet et de l\'injustice continuent d\'alimenter les r√™ves bris√©s de ceux qu\'on a toujours laiss√©s de c√¥t√©.',
  auteur: 'Imaginary Flame',
  genres: ['fantasy', 'dark_fantasy', 'heroic_fantasy'],
  themes: ['amitie', 'identite', 'justice', 'pouvoir'],
  tonalite: 'epique'
};

const PERSONNAGES_DATA = [
  {
    nom: 'La F√©e Sans Ailes',
    description: 'Une jeune F√©e n√©e sans ailes, m√©pris√©e de tous, vivant dans les Basfonds de Sylvania. Malgr√© son handicap, elle poss√®de une d√©termination farouche et des pouvoirs cach√©s.',
    apparence: 'Jeune f√©e d√©pourvue d\'ailes, aux traits d√©licats mais marqu√©s par les √©preuves. Porte des v√™tements simples adapt√©s √† la vie dans les Basfonds.',
    personnalite: 'Courageuse malgr√© le rejet social, d√©termin√©e √† prouver sa valeur. Cache sa vuln√©rabilit√© derri√®re une fa√ßade de force.',
    background: 'N√©e dans une soci√©t√© f√©√©rique qui valorise le vol, elle a grandi dans le m√©pris et l\'exclusion. A d√©velopp√© des capacit√©s uniques pour compenser son handicap.',
    role: 'protagoniste',
    niveau: 1,
    chapitres: [1, 2, 3, 5, 8, 10, 12, 15, 18, 20]
  },
  {
    nom: 'Le H√©ros',
    description: 'Un humain errant, survivant d\'un massacre oubli√©, porteur d\'un pouvoir d√©vastateur et d\'un nom effac√©. Surnomm√© avec crainte par ceux qui connaissent sa l√©gende.',
    apparence: 'Homme aux traits marqu√©s par les √©preuves, porte les cicatrices de batailles pass√©es. Son regard trahit une grande lassitude m√™l√©e √† une force int√©rieure.',
    personnalite: 'Hant√© par son pass√©, r√©ticent √† utiliser ses pouvoirs destructeurs. Cherche la r√©demption mais doute de la m√©riter.',
    background: 'Unique survivant d\'un massacre qui a d√©truit sa communaut√©. Porte le fardeau d\'un pouvoir qu\'il ne contr√¥le pas enti√®rement.',
    role: 'protagoniste',
    niveau: 1,
    chapitres: [1, 2, 4, 6, 8, 11, 14, 16, 19, 20]
  },
  {
    nom: 'Monarque de Sylvania',
    description: 'Dirigeant du dernier bastion d\'une monarchie aussi brillante que pourrie de l\'int√©rieur. Incarne les contradictions d\'un syst√®me en d√©cadence.',
    apparence: 'Figure majestueuse aux atours royaux somptueux, mais dont le regard r√©v√®le la corruption et la lassitude du pouvoir.',
    personnalite: 'Calculateur et manipulateur, mais pas d√©nu√© d\'une certaine grandeur. Conscient de la pourriture de son syst√®me mais incapable de le changer.',
    background: 'H√©ritier d\'un royaume en d√©clin, pris entre les n√©cessit√©s politiques et ses propres ambitions. Manipule les √©v√©nements depuis l\'ombre.',
    role: 'antagoniste',
    niveau: 8,
    chapitres: [7, 9, 12, 15, 17, 20]
  },
  {
    nom: 'Champion du Tournoi',
    description: 'Guerrier redoutable participant aux tournois meurtriers organis√©s par la monarchie. Repr√©sente la violence institutionnalis√©e du syst√®me.',
    apparence: 'Physique impressionnant, armure de combat orn√©e de troph√©es. Porte les marques de nombreux combats victorieux.',
    personnalite: 'Brutal mais honorable selon son propre code. Respecte la force mais m√©prise la faiblesse.',
    background: 'Issu des classes populaires, a gravi les √©chelons par la violence. Devient progressivement conscient de son r√¥le dans l\'oppression.',
    role: 'rival',
    niveau: 5,
    chapitres: [4, 8, 11, 14, 18]
  },
  {
    nom: 'Sage des Basfonds',
    description: 'Ancien conseiller royal d√©chu, maintenant guide spirituel dans les quartiers pauvres. D√©tient les secrets de l\'ancienne fusion des mondes.',
    apparence: 'Vieil homme aux traits nobles malgr√© ses habits simples. Ses yeux brillent d\'une sagesse ancienne.',
    personnalite: 'Sage et patient, mais amer envers le syst√®me qui l\'a rejet√©. Cherche √† transmettre son savoir √† la nouvelle g√©n√©ration.',
    background: 'Ancien membre de l\'√©lite, banni pour avoir r√©v√©l√© des v√©rit√©s d√©rangeantes. Conna√Æt l\'histoire secr√®te de la fusion des mondes.',
    role: 'mentor',
    niveau: 3,
    chapitres: [2, 5, 9, 13, 16]
  }
];

const LIEUX_DATA = [
  {
    nom: 'Sylvania',
    description: 'Dernier bastion d\'une monarchie brillante en apparence mais rong√©e par la corruption. Cit√© divis√©e entre quartiers nobles et Basfonds mis√©rables.',
    histoire: 'Ancienne capitale n√©e de la fusion entre le monde humain and f√©√©rique. T√©moigne de la grandeur pass√©e et de la d√©cadence pr√©sente.',
    niveau: 1,
    chapitres: [1, 2, 3, 4, 5, 8, 10, 12, 15, 18, 20]
  },
  {
    nom: 'Les Basfonds',
    description: 'Quartiers pauvres de Sylvania o√π vivent les exclus et les marginaux. Lieu de survie et de solidarit√© dans l\'adversit√©.',
    histoire: 'Form√©s autour des anciens sites de bataille de la fusion. Abritent ceux que la soci√©t√© officielle a rejet√©s.',
    niveau: 1,
    chapitres: [1, 3, 5, 7, 9, 11, 13, 15]
  },
  {
    nom: 'Palais Royal',
    description: 'Somptueux palais au c≈ìur de Sylvania, symbole du pouvoir monarchique. Magnifique fa√ßade cachant intrigues et corruption.',
    histoire: 'Construit sur les ruines du premier point de contact entre les deux mondes. Architecture m√™lant styles humain et f√©√©rique.',
    niveau: 6,
    chapitres: [7, 12, 15, 18, 20]
  },
  {
    nom: 'Ar√®nes des Tournois',
    description: 'Complexe gigantesque o√π se d√©roulent les tournois meurtriers. Spectacle de violence pour divertir les masses.',
    histoire: 'Ancien site rituel f√©√©rique transform√© en lieu de spectacle sanglant. Les gradins r√©sonnent des cris de la foule assoiff√©e de sang.',
    niveau: 4,
    chapitres: [4, 8, 11, 14, 18]
  },
  {
    nom: 'Fronti√®res Oubli√©es',
    description: 'Terres d√©sol√©es aux limites du royaume, o√π subsistent les cicatrices de l\'ancienne guerre. Lieu de p√®lerinage pour les survivants.',
    histoire: 'Champs de bataille de la grande fusion, maintenant terres de d√©solation. Certains lieux conservent encore des traces de magie ancienne.',
    niveau: 10,
    chapitres: [13, 16, 19]
  }
];

const OBJETS_DATA = [
  {
    nom: 'Lame du H√©ros D√©chu',
    description: '√âp√©e l√©gendaire port√©e par le H√©ros, forg√©e dans les larmes des deux mondes. Sa lame change de couleur selon les √©motions de son porteur.',
    proprietes: 'Indestructible, amplifie les pouvoirs de son porteur, r√©v√®le les intentions cach√©es des ennemis.',
    histoire: 'Forg√©e lors de la fusion des mondes, elle a √©t√© t√©moin de tous les massacres. Ne peut √™tre mani√©e que par celui qui accepte son fardeau.',
    niveau: 8,
    chapitres: [6, 8, 11, 16, 19, 20]
  },
  {
    nom: 'Cristal des Basfonds',
    description: 'Gemme myst√©rieuse trouv√©e dans les profondeurs de Sylvania. Pulse d\'une lumi√®re douce qui r√©conforte les √¢mes bless√©es.',
    proprietes: 'Amplifie les pouvoirs magiques, soigne les blessures spirituelles, r√©v√®le la v√©ritable nature des √™tres.',
    histoire: 'Fragment du c≈ìur magique qui liait les deux mondes. Sa d√©couverte par la F√©e change le cours de son destin.',
    niveau: 5,
    chapitres: [3, 7, 10, 14, 17]
  },
  {
    nom: 'Couronne de Sylvania',
    description: 'Symbole du pouvoir royal, forg√©e dans l\'or des deux mondes. Porte les gemmes des anciennes lign√©es f√©√©rique et humaine.',
    proprietes: 'Conf√®re l\'autorit√© royale, permet de commander aux esprits ancestraux, r√©v√®le les trahisons.',
    histoire: 'Cr√©√©e pour sceller l\'alliance entre les deux peuples. Maintenant symbole d\'un pouvoir corrompu qui a trahi ses id√©aux.',
    niveau: 12,
    chapitres: [12, 15, 18, 20]
  }
];

const ANECDOTES_DATA = [
  {
    titre: 'La Fusion des Mondes',
    contenu: 'L\'√©v√©nement fondateur de cet univers est la fusion myst√©rieuse entre le monde humain et le royaume f√©√©rique, cr√©ant un monde hybride aux r√®gles nouvelles.',
    type: 'creation',
    niveau: 3
  },
  {
    titre: 'Symbolisme des Ailes',
    contenu: 'L\'absence d\'ailes de la f√©e protagoniste symbolise l\'exclusion sociale et la diff√©rence, mais aussi le potentiel de transcender les limitations impos√©es.',
    type: 'creation',
    niveau: 5
  },
  {
    titre: 'Architecture Narrative',
    contenu: 'Le syst√®me Sanity complexe d√©velopp√© pour cet univers permet de g√©rer les spoilers et r√©v√©lations progressives, refl√©tant la profondeur de l\'intrigue.',
    type: 'creation',
    niveau: 8
  },
  {
    titre: 'Inspiration Tolkienienne',
    contenu: 'L\'id√©e de fusion entre mondes s\'inspire des concepts de Tolkien sur la s√©paration entre le monde des Elfes et celui des Hommes.',
    type: 'reference',
    niveau: 10
  },
  {
    titre: 'Easter Egg: Les Basfonds',
    contenu: 'Le nom "Basfonds" fait √©cho aux quartiers populaires de Paris du 19√®me si√®cle, cr√©ant un parall√®le entre fantasy et r√©alisme social.',
    type: 'easter_egg',
    niveau: 12
  }
];

// POST - Cr√©er le contenu wiki pour "H√©ros et la F√©e"
export async function POST(request: NextRequest) {
  try {
    console.log('üé≠ Cr√©ation du wiki pour "La Fable du H√©ros et la F√©e"...');

    // Cr√©er ou r√©cup√©rer l'histoire
    let histoire = await prisma.histoire.findFirst({
      where: { titre: { contains: 'H√©ros et la F√©e' } }
    });

    if (!histoire) {
      histoire = await prisma.histoire.create({
        data: {
          titre: UNIVERS_DATA.titre,
          description: UNIVERS_DATA.description,
          auteur: UNIVERS_DATA.auteur,
          source: 'Portfolio Sanity - H√©ros et la F√©e',
          url_source: 'https://votre-portfolio.com/univers/herosfee',
          date_publication: new Date(),
          urls_multiples: {
            genres: UNIVERS_DATA.genres,
            themes: UNIVERS_DATA.themes,
            tonalite: UNIVERS_DATA.tonalite,
            sanity_id: 'herosfee'
          }
        }
      });
      console.log(`‚úÖ Histoire cr√©√©e: ${histoire.titre}`);
    }

    const stats = {
      personnages: 0,
      lieux: 0,
      objets: 0,
      anecdotes: 0
    };

    // Cr√©er les personnages
    console.log('üë• Cr√©ation des personnages...');
    for (const perso of PERSONNAGES_DATA) {
      await prisma.wiki_personnage.create({
        data: {
          histoire_id: histoire.id,
          nom: perso.nom,
          description: perso.description,
          apparence: perso.apparence,
          personnalite: perso.personnalite,
          background: perso.background,
          niveau_deverrouillage: perso.niveau,
          anecdotes: {
            role: `R√¥le narratif: ${perso.role}`,
            importance: perso.niveau <= 3 ? 'Personnage central' : perso.niveau <= 8 ? 'Personnage important' : 'Personnage secondaire'
          },
          chapitres_apparition: perso.chapitres
        }
      });
      stats.personnages++;
    }

    // Cr√©er les lieux
    console.log('üè∞ Cr√©ation des lieux...');
    for (const lieu of LIEUX_DATA) {
      await prisma.wiki_lieu.create({
        data: {
          histoire_id: histoire.id,
          nom: lieu.nom,
          description: lieu.description,
          histoire_lieu: lieu.histoire,
          niveau_deverrouillage: lieu.niveau,
          anecdotes: {
            importance: lieu.niveau <= 3 ? 'Lieu central' : lieu.niveau <= 8 ? 'Lieu important' : 'Lieu secret',
            apparitions: `Appara√Æt dans ${lieu.chapitres.length} chapitres`
          },
          chapitres_apparition: lieu.chapitres
        }
      });
      stats.lieux++;
    }

    // Cr√©er les objets
    console.log('‚öîÔ∏è Cr√©ation des objets...');
    for (const objet of OBJETS_DATA) {
      await prisma.wiki_objet.create({
        data: {
          histoire_id: histoire.id,
          nom: objet.nom,
          description: objet.description,
          proprietes: objet.proprietes,
          histoire_objet: objet.histoire,
          niveau_deverrouillage: objet.niveau,
          anecdotes: {
            importance: objet.niveau <= 5 ? 'Objet majeur' : objet.niveau <= 10 ? 'Objet important' : 'Artefact l√©gendaire',
            pouvoir: 'Objet magique aux propri√©t√©s uniques'
          },
          chapitres_apparition: objet.chapitres
        }
      });
      stats.objets++;
    }

    // Cr√©er les anecdotes
    console.log('üìñ Cr√©ation des anecdotes...');
    for (const anecdote of ANECDOTES_DATA) {
      await prisma.wiki_anecdote.create({
        data: {
          histoire_id: histoire.id,
          titre: anecdote.titre,
          contenu: anecdote.contenu,
          type: anecdote.type,
          niveau_deverrouillage: anecdote.niveau,
          chapitres_concernes: [1, 5, 10, 15, 20] // Chapitres cl√©s
        }
      });
      stats.anecdotes++;
    }

    // Cr√©er quelques illustrations conceptuelles
    console.log('üé® Cr√©ation des illustrations...');
    const illustrations = [
      {
        titre: 'Portrait de la F√©e Sans Ailes',
        description: 'Concept art du personnage principal f√©minin',
        type: 'personnage',
        niveau: 1
      },
      {
        titre: 'Le H√©ros dans les Basfonds',
        description: 'Illustration dramatique du h√©ros dans son environnement',
        type: 'scene',
        niveau: 2
      },
      {
        titre: 'Vue panoramique de Sylvania',
        description: 'Architecture grandiose de la capitale royale',
        type: 'lieu',
        niveau: 3
      },
      {
        titre: 'La Fusion des Mondes',
        description: 'Repr√©sentation artistique de l\'√©v√©nement fondateur',
        type: 'concept_art',
        niveau: 8
      }
    ];

    for (const illus of illustrations) {
      await prisma.wiki_illustration.create({
        data: {
          histoire_id: histoire.id,
          titre: illus.titre,
          description: illus.description,
          image_url: `https://images.unsplash.com/photo-${Math.floor(Math.random() * 1000000000)}?w=800`, // URL placeholder
          type: illus.type,
          niveau_deverrouillage: illus.niveau
        }
      });
      stats.illustrations = (stats.illustrations || 0) + 1;
    }

    const totalElements = Object.values(stats).reduce((acc, val) => acc + val, 0);

    console.log('‚úÖ Wiki "H√©ros et la F√©e" cr√©√© avec succ√®s !');

    return NextResponse.json({
      success: true,
      data: {
        histoire: {
          id: histoire.id,
          titre: histoire.titre
        },
        stats: stats,
        total_elements: totalElements,
        wiki_url: `/wiki/${histoire.id}`
      },
      message: `Wiki "H√©ros et la F√©e" cr√©√© ! ${totalElements} √©l√©ments ajout√©s.`
    });

  } catch (error) {
    console.error('Erreur cr√©ation wiki H√©ros et la F√©e:', error);
    return NextResponse.json({
      success: false,
      error: 'Erreur lors de la cr√©ation du wiki',
      details: error.message
    }, { status: 500 });
  } finally {
    await prisma.$disconnect();
  }
}

// GET - Informations sur l'univers "H√©ros et la F√©e"
export async function GET() {
  try {
    return NextResponse.json({
      success: true,
      data: {
        univers: UNIVERS_DATA,
        statistiques: {
          personnages: PERSONNAGES_DATA.length,
          lieux: LIEUX_DATA.length,
          objets: OBJETS_DATA.length,
          anecdotes: ANECDOTES_DATA.length,
          total: PERSONNAGES_DATA.length + LIEUX_DATA.length + OBJETS_DATA.length + ANECDOTES_DATA.length
        },
        aper√ßu: {
          personnages: PERSONNAGES_DATA.map(p => ({ nom: p.nom, role: p.role, niveau: p.niveau })),
          lieux: LIEUX_DATA.map(l => ({ nom: l.nom, niveau: l.niveau })),
          objets: OBJETS_DATA.map(o => ({ nom: o.nom, niveau: o.niveau }))
        }
      },
      message: 'Donn√©es pr√™tes pour l\'import'
    });
  } catch (error) {
    return NextResponse.json({
      success: false,
      error: 'Erreur lors de la r√©cup√©ration des donn√©es'
    }, { status: 500 });
  }
}

// DELETE - Supprimer le wiki "H√©ros et la F√©e"
export async function DELETE() {
  try {
    const histoire = await prisma.histoire.findFirst({
      where: { titre: { contains: 'H√©ros et la F√©e' } }
    });

    if (!histoire) {
      return NextResponse.json({
        success: false,
        error: 'Wiki "H√©ros et la F√©e" non trouv√©'
      }, { status: 404 });
    }

    // Supprimer tous les √©l√©ments wiki li√©s
    await prisma.wiki_personnage.deleteMany({ where: { histoire_id: histoire.id } });
    await prisma.wiki_lieu.deleteMany({ where: { histoire_id: histoire.id } });
    await prisma.wiki_objet.deleteMany({ where: { histoire_id: histoire.id } });
    await prisma.wiki_anecdote.deleteMany({ where: { histoire_id: histoire.id } });
    await prisma.wiki_illustration.deleteMany({ where: { histoire_id: histoire.id } });
    await prisma.wiki_debloquage.deleteMany({ where: { histoire_id: histoire.id } });

    // Supprimer l'histoire
    await prisma.histoire.delete({ where: { id: histoire.id } });

    return NextResponse.json({
      success: true,
      message: 'Wiki "H√©ros et la F√©e" supprim√© avec succ√®s'
    });

  } catch (error) {
    console.error('Erreur suppression wiki:', error);
    return NextResponse.json({
      success: false,
      error: 'Erreur lors de la suppression du wiki'
    }, { status: 500 });
  } finally {
    await prisma.$disconnect();
  }
}